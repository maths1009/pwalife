name: Tests & Linting

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    name: 🔧 Setup Bun & Cache Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📦 Restore dependency cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            bun.lockb
          key: bun-deps-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            bun-deps-${{ runner.os }}-

      - name: 📦 Install dependencies (if not cached)
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: 📁 Cache repository & dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: repo-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            repo-${{ runner.os }}-

  lint:
    name: ✨ Linting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Restore repository & dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: repo-${{ runner.os }}-${{ github.sha }}

      - name: 🏗️ Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: ✨ Run ESLint
        run: bun run eslint

  test_unit:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Restore repository & dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: repo-${{ runner.os }}-${{ github.sha }}

      - name: 🏗️ Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 🧪 Run Unit Tests
        run: bun run test:unit

  test_e2e:
    name: 🕵️ E2E Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Restore repository & dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: repo-${{ runner.os }}-${{ github.sha }}

      - name: 🏗️ Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📥 Install Playwright browsers
        run: bunx playwright install --with-deps

      - name: 🕵️ Run E2E Tests
        run: bun run test:e2e
